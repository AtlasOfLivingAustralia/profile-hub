import grails.util.Environment

buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        maven { url "http://jaspersoft.artifactoryonline.com/jaspersoft/jaspersoft-repo"}
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "gradle.plugin.com.github.erdi.webdriver-binaries:webdriver-binaries-gradle-plugin:2.0"
        classpath "org.grails.plugins:hibernate5:7.0.4"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.2.4"
        classpath 'org.grails.plugins:quartz:2.0.13' // Needed to compile *Job classes
    }
}

version "4.0-SNAPSHOT"
group "au.org.ala"
boolean inplace = false // Set to true it needed only for development

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"com.github.erdi.webdriver-binaries"
apply plugin:"com.bertramlabs.asset-pipeline"
apply plugin:"org.grails.grails-gsp"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "https://nexus.ala.org.au/content/groups/public/" }
    maven { url "http://jaspersoft.artifactoryonline.com/jaspersoft/jaspersoft-repo"}
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

def httpmimeVersion = "4.4.1"
dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    // transitive dependency
    compile "org.springframework.boot:spring-boot-starter-validation"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:gsp"
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "javax.xml.bind:jaxb-api:2.3.1"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:3.2.4"
    testCompile "io.micronaut:micronaut-inject-groovy"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.mockito:mockito-core"
    testCompile "org.grails:grails-web-testing-support"
    testCompile "org.grails.plugins:geb"
    testCompile "org.seleniumhq.selenium:selenium-remote-driver:3.14.0"
    testCompile "org.seleniumhq.selenium:selenium-api:3.14.0"
    testCompile "org.seleniumhq.selenium:selenium-support:3.14.0"
    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:3.14.0"
    testRuntime "org.seleniumhq.selenium:selenium-firefox-driver:3.14.0"

    compile "org.apache.httpcomponents:httpmime:${httpmimeVersion}"
    compile "org.apache.httpcomponents:httpcore:${httpmimeVersion}"
    compile "org.apache.httpcomponents:httpclient:${httpmimeVersion}"

    compile 'net.sf.ehcache:ehcache:2.8.4'
    runtime "org.springframework:spring-test:4.1.2.RELEASE" // required by the rendering plugin
    compile 'au.org.ala:image-utils:1.8.2'
    compile 'org.jsoup:jsoup:1.7.2'
    compile 'org.apache.tika:tika-parsers:1.3'
    compile "commons-fileupload:commons-fileupload:1.3.1"

    compile 'net.sf.jasperreports:jasperreports:6.4.1'
    compile 'net.sf.jasperreports:jasperreports-functions:6.4.1'
    compile 'au.org.ala:jasper-liberation-fonts-2.00.1:1.3'
    compile 'net.glxn:qrgen:1.4'
    compile 'org.apache.xmlgraphics:batik-bridge:1.9'
    compile 'org.apache.xmlgraphics:batik-svggen:1.9'
    compile 'com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:20160827.1'
    compile 'com.google.guava:guava:19.0'
    compile 'com.google.code.findbugs:jsr305:3.0.1'
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile "org.apache.httpcomponents:httpcore:${httpmimeVersion}"
    compile "org.apache.httpcomponents:httpclient:${httpmimeVersion}"
    compile "org.apache.httpcomponents:httpmime:${httpmimeVersion}"

    compile "org.grails.plugins:external-config:2.0.0"
    compile "org.grails.plugins:ala-auth:3.2.3"
    compile 'org.grails.plugins:csv:1.0.1'
    compile 'net.sf.opencsv:opencsv:2.3'
    compile("org.grails.plugins:ala-map-plugin:3.0")
    if(!inplace){
        compile("org.grails.plugins:ala-ws-plugin:2.1-SNAPSHOT")
    }

    compile "org.codehaus.groovy.modules.http-builder:http-builder:0.7.1"
    compile("org.grails.plugins:ala" +
            "-admin-plugin:2.2")
    compile "org.grails.plugins:quartz:2.0.13"
    compile "org.quartz-scheduler:quartz:2.2.1" // transitive dependency
    runtime("au.org.ala.plugins.grails:images-client-plugin:1.2")

    runtime "org.grails.plugins:jquery:1.11.1"
    compile 'com.bertramlabs.plugins:sass-asset-pipeline:3.2.4'
    assets 'com.craigburke.angular:angular-annotate-asset-pipeline:2.4.1'
    assets "com.craigburke.angular:angular-template-asset-pipeline:2.4.0"
    if (Environment.current == Environment.DEVELOPMENT) {
        compile "org.grails.plugins:console:1.5.11"
    }

    testCompile "au.org.ala:userdetails-service-client:1.5.0"
}

bootRun {
    ignoreExitValue true
    jvmArgs(
        '-Dspring.output.ansi.enabled=always', 
        '-noverify', 
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

webdriverBinaries {
    chromedriver '2.45.0'
    geckodriver '0.24.0'
}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}


assets {
    minifyJs = true
    minifyCss = true
}
